{"version":3,"sources":["Components/Styled.js","Components/Country/Countrycard.styled.js","Components/Country/CountryCard.js","Components/Country/CountryGrid.js","pages/Home.styled.js","pages/Home.js","Components/Country/countrymain.styled.js","Components/Country/CountryMain.js","pages/Country.js","App.js","reportWebVitals.js","index.js"],"names":["FlexGrid","styled","FadeIn","StyledCountryCard","Link","CountryCard","Country","TotalConfirmed","TotalDeath","TotalRecovered","formatter","Intl","NumberFormat","maximumSignificantDigits","to","style","color","format","CountryGrid","response","input","data","className","map","v","name","toLowerCase","search","latest_data","confirmed","deaths","recovered","SearchInput","TitleWrapper","div","theme","mainColors","blue","renderResults","undefined","Home","useState","setInput","setResponse","useEffect","fetch","then","resp","json","r","catch","err","console","error","margin","width","type","placeholder","value","onChange","ev","target","StyledCountryMain","CountryMain","death","td","tc","updatedAt","population","critical","deathrate","recoveryrate","casespermillion","substring","toUpperCase","toFixed","display","alignContent","justifyContent","fontSize","paddingLeft","height","paddingTop","background","fontWeight","borderColor","borderRight","radius","progress","strokeWidth","strokeColor","strokeLinecap","trackStrokeWidth","position","textAlign","top","country","match","today","updated_at","calculated","death_rate","recovery_rate","cases_per_million_population","setData","useParams","gray","dark","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qOAIaA,EAAWC,YAAOC,IAAPD,CAAH,8FCDRE,EAAoBF,YAAOG,IAAPH,CAAH,utB,OCiCfI,EAjCK,SAAC,GAKd,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,WACAC,EACI,EADJA,eAEIC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,yBAA0B,IAE5B,OACE,cAACV,EAAD,CAAmBW,GAAE,WAAMR,GAA3B,SACE,gCACE,6BAAKA,IACL,iDACmB,IADnB,uCAEE,sBAAMS,MAAO,CAAEC,MAAO,WAAtB,SACGN,EAAUO,OAAOV,KAEpB,uBALF,gBAKyB,OALzB,mDAME,sBAAMQ,MAAO,CAAEC,MAAO,WAAtB,SACGN,EAAUO,OAAOT,KAEpB,uBATF,mBAS4B,IAT5B,uCAUE,sBAAMO,MAAO,CAAEC,MAAO,WAAtB,SACGN,EAAUO,OAAOR,KACZ,OAEV,6BCFOS,EAxBK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvBC,EAASF,EAATE,KAER,OACE,cAACrB,EAAD,CAAUsB,UAAU,OAApB,SACGD,EAAKE,KAAI,SAAAC,GACR,OAA2C,IAAvCA,EAAEC,KAAKC,cAAcC,OAAOP,GAE5B,8BACE,cAAC,EAAD,CAEEd,QAASkB,EAAEC,KACXlB,eAAgBiB,EAAEI,YAAYC,UAC9BrB,WAAYgB,EAAEI,YAAYE,OAC1BrB,eAAgBe,EAAEI,YAAYG,WAJzBP,EAAEC,OAFDD,EAAEC,WAUT,QCpBFO,EAAc/B,IAAOmB,MAAV,uaA2CXa,GArBsBhC,IAAOiC,IAAV,qWAQR,qBAAGC,MAAkBC,WAAWC,QAa5BpC,IAAOiC,IAAV,+JAKZ,qBAAGC,MAAkBC,WAAWC,SC3CvCC,GDiDYrC,IAAOiC,IAAR,8HAIJ,qBAAGC,MAAkBC,WAAWC,QCrDvB,SAAClB,EAASC,GAG9B,QAAsBmB,IAAlBpB,EAASE,KAEX,OACE,8BAME,cAAC,EAAD,CAAaF,SAAUA,EAAUC,MAAOA,QA2EjCoB,EArEF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KAEA,EAAgCD,mBAAS,IAAzC,mBAAOtB,EAAP,KAAiBwB,EAAjB,KA4CA,OAzBAC,qBAAU,WAYR,OAXAC,MAAM,oCACLC,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAG,GACJN,EAAYM,MAGbC,OAAM,SAAAC,GACLC,QAAQC,MAAMF,MAET,eAGN,IAWD,sBAAKpC,MAAO,CAACuC,OAAO,OAAQC,MAAM,UAAlC,UACE,cAACtB,EAAD,UACE,6DAEF,cAACD,EAAD,CACEwB,KAAK,OACLC,YAAY,iBACZC,MAAOtC,EAEPuC,SArDgB,SAAAC,GACpBlB,EAASkB,EAAGC,OAAOH,UA2DhBpB,EAAcnB,EAASC,OCvFjB0C,EAAoB7D,IAAOiC,IAAV,iV,yBCiJf6B,EA9IK,SAAC,GAad,IAZLzD,EAYI,EAZJA,QACAuB,EAWI,EAXJA,UACAmC,EAUI,EAVJA,MACAjC,EASI,EATJA,UACAkC,EAQI,EARJA,GACAC,EAOI,EAPJA,GACAC,EAMI,EANJA,UACAC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAGAL,EAAYA,EAAUM,UAAU,GAAI,IACpCnE,EAAUA,EAAQoE,cAClBJ,EAAYA,EAAUK,QAAQ,GAC9BJ,EAAeA,EAAaI,QAAQ,GAEpC,IAAIjE,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC7CC,yBAA0B,IAG5B,OACE,qCACE,eAACiD,EAAD,WACE,+BAAKxD,EACL,sBAAKS,MAAO,CAAC6D,QAAQ,OAAOC,aAAa,SAASC,eAAe,SAASC,SAAS,QAAnF,UACE,2CAAcZ,KACd,qBAAIpD,MAAO,CAACiE,YAAY,QAAxB,yBAA8CtE,EAAUO,OAAOmD,YAKjE,uBACA,sBAAKrD,MAAO,CAAEkE,OAAQ,OAAQC,WAAY,QAA1C,UACE,uBACEnE,MAAO,CACLC,MAAO,UACPmE,WAAY,UACZC,WAAY,QAJhB,0BAOgB1E,EAAUO,OAAOY,MAEjC,uBACEd,MAAO,CACLC,MAAO,UACPmE,WAAY,UACZC,WAAY,QAJhB,8BAOoB1E,EAAUO,OAAOc,MAErC,uBACEhB,MAAO,CACLC,MAAO,UACPmE,WAAY,UACZC,WAAY,QAJhB,0BAOgB1E,EAAUO,OAAO+C,SAGnC,sBAAK1C,UAAU,mDAAmDP,MAAO,CAACC,MAAM,OAAOqE,YAAY,SAAnG,UACE,uBAAMtE,MAAO,CAACuE,YAAY,qBAA1B,0BAA+D5E,EAAUO,OAAOiD,MAChF,uBAAMnD,MAAO,CAACuE,YAAY,qBAA1B,2BAA+D5E,EAAUO,OAAOgD,MAChF,uBAAMlD,MAAO,CAACuE,YAAY,qBAA1B,uBAA2D5E,EAAUO,OAAOoD,MAC5E,uDAA0B3D,EAAUO,OAAOuD,YAG/C,sBACEzD,MAAO,CACL6D,QAAS,OACTE,eAAgB,SAChBI,WAAY,OACZH,SAAU,QALd,UAQE,cAAC,IAAD,CACEQ,OAAQ,GACRC,SAAUlB,EACVmB,YAAa,EACbC,YAAY,UACZC,cAAc,SACdC,iBAAkB,GANpB,SAQE,qBACEtE,UAAU,YACVP,MAAO,CACL6D,QAAS,OACTK,OAAQ,OACRH,eAAgB,SAChBxB,OAAQ,OACRuC,SAAU,WACVC,UAAW,SACXC,IAAK,IACLxC,MAAO,OACP2B,WAAY,QAXhB,SAcE,8CACa,uBACVZ,EAFH,WAOJ,cAAC,IAAD,CACEiB,OAAQ,GACRC,SAAUjB,EACVkB,YAAa,EACbC,YAAY,UACZC,cAAc,SACdC,iBAAkB,GANpB,SAQE,qBACEtE,UAAU,YACVP,MAAO,CACL6D,QAAS,OACTK,OAAQ,OACRH,eAAgB,SAChBxB,OAAQ,OACRuC,SAAU,WACVC,UAAW,SACXC,IAAK,IACLxC,MAAO,OACP2B,WAAY,QAXhB,SAcE,iDACgB,uBACbX,EAFH,kBCpINjC,EAAgB,SAACjB,EAAM2E,GAG3B,GAAa,KAAT3E,EAEF,OAAOA,EAAKE,KAAI,SAAAC,GAGd,OAAIA,EAAEC,OAASuE,EAAQA,QAEnB,8BACE,cAAC,EAAD,CACE1F,QAASkB,EAAEC,KACXwE,MAAOD,EACPnE,UAAWL,EAAEI,YAAYC,UACzBmC,MAAOxC,EAAEI,YAAYE,OACrBC,UAAWP,EAAEI,YAAYG,UACzBkC,GAAIzC,EAAE0E,MAAMpE,OACZoC,GAAI1C,EAAE0E,MAAMrE,UACZsC,UAAW3C,EAAE2E,WACb/B,WAAY5C,EAAE4C,WACdC,SAAU7C,EAAEI,YAAYyC,SACxBC,UAAW9C,EAAEI,YAAYwE,WAAWC,WACpC9B,aAAc/C,EAAEI,YAAYwE,WAAWE,cACvC9B,gBAAiBhD,EAAEI,YAAYwE,WAAWG,gCAdpC/E,EAAEC,WAmBd,MA+DOnB,EAzDC,WACd,MAAwBmC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAamF,EAAb,KAgBA5D,qBAAU,WAYR,OAXAC,MAAM,oCACHC,MAAK,SAAAC,GACJ,OAAOA,EAAKC,UAEbF,MAAK,SAAAG,GACJuD,EAAQvD,EAAE5B,SAGX6B,OAAM,SAAAC,GACLC,QAAQC,MAAMF,MAEX,eACN,IAEH,IAAM6C,EAAUS,cAGhB,OACE,8BAEGnE,EAAcjB,EAAM2E,MCvErB7D,EAAQ,CACZC,WAAY,CACVC,KAAM,UACNqE,KAAM,UACNC,KAAM,YAoBKC,MAjBf,WACE,OACE,cAAC,IAAD,CAAezE,MAAOA,EAAtB,SAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,qCCZSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.3165c641.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport FadeIn from 'react-fade-in';\r\n\r\n// creating components form styled\r\nexport const FlexGrid = styled(FadeIn)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCountryCard = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  div {\r\n    width: 300px;\r\n    height: 100%;\r\n    margin: 0 15px 40px;\r\n    box-shadow: 0px 0px 50px 0px rgba(219, 219, 219, 5);\r\n    margin-top: 10px;\r\n    border-radius: 15px;\r\n    padding: 5px 20px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      text-decoration-color: blue;\r\n      color: white;\r\n      background-color: #8c8c8c;\r\n    }\r\n    h1 {\r\n      text-align: center;\r\n      margin: 10px 0;\r\n      font-size: 21px;\r\n    }\r\n\r\n    p {\r\n      box-sizing: border-box;\r\n      width:100%;\r\n      margin: 0;\r\n      position:relative;\r\n      span{\r\n        box-sizing: border-box;\r\n        width:100px;\r\n        text-align: right;\r\n      }\r\n    }\r\n\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledCountryCard } from './Countrycard.styled';\r\n\r\nconst CountryCard = ({\r\n  Country,\r\n  TotalConfirmed,\r\n  TotalDeath,\r\n  TotalRecovered,\r\n}) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    maximumSignificantDigits: 3,\r\n  });\r\n  return (\r\n    <StyledCountryCard to={`/${Country}`}>\r\n      <div>\r\n        <h1>{Country}</h1>\r\n        <p>\r\n          Total Confirmed:{' '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#b30000' }}>\r\n            {formatter.format(TotalConfirmed)}\r\n          </span>\r\n          <br></br>Total Death: {'    '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#333333' }}>\r\n            {formatter.format(TotalDeath)}\r\n          </span>\r\n          <br></br>Total Recovered:{' '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#006600' }}>\r\n            {formatter.format(TotalRecovered)}\r\n          </span>{' '}\r\n        </p>\r\n        <br></br>\r\n      </div>\r\n    </StyledCountryCard>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from 'react';\r\nimport { FlexGrid } from '../Styled';\r\nimport CountryCard from './CountryCard';\r\n\r\nconst CountryGrid = ({ response, input }) => {\r\n  const { data } = response;\r\n  // console.log(data);\r\n  return (\r\n    <FlexGrid className=\"mt-2\">\r\n      {data.map(v => {\r\n        if (v.name.toLowerCase().search(input) === 0) {\r\n          return (\r\n            <div key={v.name}>\r\n              <CountryCard\r\n                key={v.name}\r\n                Country={v.name}\r\n                TotalConfirmed={v.latest_data.confirmed}\r\n                TotalDeath={v.latest_data.deaths}\r\n                TotalRecovered={v.latest_data.recovered}\r\n              />\r\n            </div>\r\n          );\r\n        } else return undefined;\r\n      })}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default CountryGrid;\r\n","import styled from 'styled-components'\r\n\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 500px;\r\n  height: 18px;\r\n  margin: auto;\r\n  margin-bottom: 50px;\r\n  outline: none;\r\n  padding: 13px 15px;\r\n  border: 1px solid #dbdbdb;\r\n  box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n  font-size: 14px;\r\n  border-radius: 20px;\r\n  color: #8d8d8d;\r\n\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n  }\r\n`;\r\n\r\n\r\nexport const SearchButtonWrapper = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 35px;\r\n  \r\n  button {\r\n    color: #fff;\r\n    width: 125px;\r\n    height: 40px;\r\n    background-color: ${({ theme }) => theme.mainColors.blue};\r\n    margin: auto;\r\n    padding: 10px 30px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 20px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    text-transform: uppercase;\r\n    margin: 0 0 10px;\r\n  }\r\n`;\r\n\r\nexport const Main=styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n  h5 {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    margin: 0 0 5px;\r\n  }\r\n\r\n`","import React, { useEffect, useState } from 'react';\r\nimport CountryGrid from '../Components/Country/CountryGrid';\r\nimport {\r\n  SearchInput,\r\n  TitleWrapper,\r\n} from './Home.styled';\r\n\r\nconst renderResults = (response,input) => {\r\n  // console.log('renderResults');\r\n  // console.log(response);\r\n  if (response.data !== undefined) {\r\n    // console.log('insiderenderResults');\r\n    return (\r\n      <div>\r\n        {/* <Main>\r\n          <h5 className=\"text-center\">TotalConfirmed: {response.Global.TotalConfirmed}</h5>\r\n          <h5 className=\"text-center\">TotalDeath: {response.Global.TotalDeaths}</h5>\r\n          <h5 className=\"text-center\">TotalRecovered: {response.Global.TotalRecovered}</h5>\r\n        </Main> */}\r\n        <CountryGrid response={response} input={input}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const [response, setResponse] = useState('');\r\n  const onInputChange = ev => {\r\n    setInput(ev.target.value);\r\n  };\r\n\r\n  // const onSearch = () => {\r\n  //   // fetch('https://api.covid19api.com/summary')\r\n  //   fetch('https://corona-api.com/countries')\r\n  //     .then(resp => {\r\n  //       return resp.json();\r\n  //     })\r\n  //     .then(r => {\r\n  //       setResponse(r);\r\n  //       console.log(r);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.error(err);\r\n  //     });\r\n  // };\r\n  useEffect(() => {\r\n    fetch('https://corona-api.com/countries')\r\n    .then(resp => {\r\n      return resp.json();\r\n    })\r\n    .then(r => {\r\n      setResponse(r);\r\n      // console.log(r);\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    });\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\n  \r\n\r\n  // const onKeyDown = ev => {\r\n  //   if (ev.keyCode === 13) {\r\n  //     onSearch();\r\n  //   }\r\n  // };\r\n\r\n  //console.log(input);\r\n  return (\r\n    <div style={{margin:'auto', width:'1400px'}}>\r\n      <TitleWrapper>\r\n        <h1>COVID-19 PANDEMIC TRACKER</h1>\r\n      </TitleWrapper>\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Type a Country\"\r\n        value={input}\r\n        // onKeyDown={onKeyDown}\r\n        onChange={onInputChange}\r\n      />\r\n      {/* <SearchButtonWrapper>\r\n        <button type=\"button\" onClick={onSearch}>\r\n          Search\r\n        </button>\r\n      </SearchButtonWrapper> */}\r\n      {renderResults(response,input)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountryMain = styled.div`\r\n  color: #636362;\r\n  text-align: center;\r\n  h1{\r\n    color: black;\r\n  }\r\n  h5{\r\n    color: gray;\r\n  }\r\n  div {\r\n    span {\r\n      width: 300px;\r\n      height: 50px;\r\n      margin: auto;\r\n      margin-left: 10px;\r\n      margin-top: 1px;\r\n      /* border-radius: 5px; */\r\n      padding: 20px 20px;\r\n    }\r\n  }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { StyledCountryMain } from './countrymain.styled';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport ProgressBar from 'react-customizable-progressbar';\r\n\r\nconst CountryMain = ({\r\n  Country,\r\n  confirmed,\r\n  death,\r\n  recovered,\r\n  td,\r\n  tc,\r\n  updatedAt,\r\n  population,\r\n  critical,\r\n  deathrate,\r\n  recoveryrate,\r\n  casespermillion,\r\n}) => {\r\n  //   console.log(Country + ' ' + match);\r\n  updatedAt = updatedAt.substring(11, 19);\r\n  Country = Country.toUpperCase();\r\n  deathrate = deathrate.toFixed(2);\r\n  recoveryrate = recoveryrate.toFixed(2);\r\n\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    maximumSignificantDigits: 3,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <StyledCountryMain>\r\n        <h1>{Country}\r\n        <div style={{display:\"flex\",alignContent:\"center\",justifyContent:\"center\",fontSize:\"15px\"}}>\r\n          <h5>Updated: {updatedAt}</h5>\r\n          <h5 style={{paddingLeft:\"30px\"}}>Population: {formatter.format(population)}</h5>\r\n        </div>\r\n        </h1>\r\n        \r\n\r\n        <br></br>\r\n        <div style={{ height: '75px', paddingTop: '60px' }}>\r\n          <span\r\n            style={{\r\n              color: '#b30000',\r\n              background: '#ff9999',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Cases: {formatter.format(confirmed)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#006600',\r\n              background: '#99ff99',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Recovered: {formatter.format(recovered)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#333333',\r\n              background: '#cccccc',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Death: {formatter.format(death)}\r\n          </span>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between align-item-center\" style={{color:\"gray\",borderColor:\"green\"}}>\r\n          <span style={{borderRight:\"1px solid #b0b0b0\"}} >Cases today: {formatter.format(tc)}</span>\r\n          <span style={{borderRight:\"1px solid #b0b0b0\"}}>Deaths today: {formatter.format(td)}</span>\r\n          <span style={{borderRight:\"1px solid #b0b0b0\"}}>Critical: {formatter.format(critical)}</span>\r\n          <span>Cases per Million: {formatter.format(casespermillion)}</span>\r\n        </div>\r\n      </StyledCountryMain>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          paddingTop: '50px',\r\n          fontSize: '15px',\r\n        }}\r\n      >\r\n        <ProgressBar\r\n          radius={70}\r\n          progress={deathrate}\r\n          strokeWidth={4}\r\n          strokeColor=\"#b30000\"\r\n          strokeLinecap=\"square\"\r\n          trackStrokeWidth={10}\r\n        >\r\n          <div\r\n            className=\"indicator\"\r\n            style={{\r\n              display: 'flex',\r\n              height: '100%',\r\n              justifyContent: 'center',\r\n              margin: 'auto',\r\n              position: 'absolute',\r\n              textAlign: 'center',\r\n              top: '0',\r\n              width: '100%',\r\n              paddingTop: '70px',\r\n            }}\r\n          >\r\n            <div>\r\n              Death Rate:<br></br>\r\n              {deathrate}%\r\n            </div>\r\n          </div>\r\n        </ProgressBar>\r\n\r\n        <ProgressBar\r\n          radius={70}\r\n          progress={recoveryrate}\r\n          strokeWidth={4}\r\n          strokeColor=\"#006600\"\r\n          strokeLinecap=\"square\"\r\n          trackStrokeWidth={10}\r\n        >\r\n          <div\r\n            className=\"indicator\"\r\n            style={{\r\n              display: 'flex',\r\n              height: '100%',\r\n              justifyContent: 'center',\r\n              margin: 'auto',\r\n              position: 'absolute',\r\n              textAlign: 'center',\r\n              top: '0',\r\n              width: '100%',\r\n              paddingTop: '70px',\r\n            }}\r\n          >\r\n            <div>\r\n              Recovery Rate:<br></br>\r\n              {recoveryrate}%\r\n            </div>\r\n          </div>\r\n        </ProgressBar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryMain;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport CountryMain from '../Components/Country/CountryMain';\r\n\r\nconst renderResults = (data, country) => {\r\n  // console.log('renderResults');\r\n  // console.log(data);\r\n  if (data !== '') {\r\n    // console.log('insiderenderResults');\r\n    return data.map(v => {\r\n      // console.log(v.name);\r\n      // console.log(country);\r\n      if (v.name === country.country) {\r\n        return (\r\n          <div key={v.name}>\r\n            <CountryMain\r\n              Country={v.name}\r\n              match={country}\r\n              confirmed={v.latest_data.confirmed}\r\n              death={v.latest_data.deaths}\r\n              recovered={v.latest_data.recovered}\r\n              td={v.today.deaths}\r\n              tc={v.today.confirmed}\r\n              updatedAt={v.updated_at}\r\n              population={v.population}\r\n              critical={v.latest_data.critical}\r\n              deathrate={v.latest_data.calculated.death_rate}\r\n              recoveryrate={v.latest_data.calculated.recovery_rate}\r\n              casespermillion={v.latest_data.calculated.cases_per_million_population}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst Country = () => {\r\n  const [data, setData] = useState('');\r\n  \r\n  // const onshow = () => {\r\n  //   // fetch('https://api.covid19api.com/summary')\r\n  //   fetch('https://corona-api.com/countries')\r\n  //     .then(resp => {\r\n  //       return resp.json();\r\n  //     })\r\n  //     .then(r => {\r\n  //       setData(r.data);\r\n  //       console.log(r.data);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.error(err);\r\n  //     });\r\n  // };\r\n  useEffect(() => {\r\n    fetch('https://corona-api.com/countries')\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(r => {\r\n        setData(r.data);\r\n        // console.log(r.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n\r\n  const country = useParams();\r\n  //   console.log(data[0].Country);\r\n  //   console.log(country);\r\n  return (\r\n    <div>\r\n      {/* <button onClick={onshow}>show</button> */}\r\n      {renderResults(data, country)}\r\n      {/* {\r\n      data &&\r\n        data.map(v => {\r\n          if (v.Country === country) {\r\n            return (\r\n              <div>\r\n                {v.Country}\r\n                {v.TotalRecovered}\r\n              </div>\r\n            );\r\n          } else {\r\n            return undefined;\r\n          }\r\n        })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Home from './pages/Home';\nimport Country from './pages/Country';\n\nconst theme = {\n  mainColors: {\n    blue: '#2400ff',\n    gray: '#c6c6c6',\n    dark: '#353535',\n  },\n};\nfunction App() {\n  return (\n    <ThemeProvider theme={theme }>\n\n    <Switch>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route exact path=\"/:country\">\n        <Country/>\n      </Route>\n      <Route>This is 404 page</Route>\n    </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}