{"version":3,"sources":["Components/Styled.js","Components/Country/Countrycard.styled.js","Components/Country/CountryCard.js","Components/Country/CountryGrid.js","pages/Home.styled.js","pages/Home.js","Components/Country/countrymain.styled.js","Components/barchart/barchartmaim.styled.js","Components/data/iso.js","Components/barchart/Barchart.js","Components/barchart/Barchartmain.js","Components/Country/CountryMain.js","pages/Country.js","App.js","reportWebVitals.js","index.js"],"names":["FlexGrid","styled","FadeIn","StyledCountryCard","Link","CountryCard","Country","TotalConfirmed","TotalDeath","TotalRecovered","formatter","Intl","NumberFormat","maximumSignificantDigits","to","style","color","format","CountryGrid","response","input","data","className","map","v","name","toLowerCase","search","latest_data","confirmed","deaths","recovered","SearchInput","TitleWrapper","div","theme","mainColors","blue","Main","HomeWrapper","renderResults","response2","undefined","ID","background","Global","TotalDeaths","Home","useState","setInput","setResponse","setResponse2","useEffect","fetch","then","resp","json","r","catch","err","console","error","log","type","placeholder","value","onChange","ev","target","StyledCountryMain","ButtonStyle","button","isoname","Barchart","render","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","date","val","Barchartmain","setRender","loading","setLoading","iso","count","Date","i","days","last","getTime","String","substring","day","getDate","month","getMonth","year","getFullYear","slice","b","confirmed_diff","recovered_diff","deaths_diff","display","flexDirection","justifyContent","alignContent","onClick","marginTop","CountryMain","death","td","tc","updatedAt","population","critical","deathrate","recoveryrate","casespermillion","da","county","toUpperCase","toFixed","num","fontSize","paddingLeft","paddingTop","fontWeight","borderColor","borderRight","marginBottom","radius","progress","strokeWidth","strokeColor","strokeLinecap","trackStrokeWidth","position","textAlign","country","match","today","updated_at","calculated","death_rate","recovery_rate","cases_per_million_population","setData","useParams","gray","dark","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e24de8e8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport FadeIn from 'react-fade-in';\r\n\r\n// creating components form styled\r\nexport const FlexGrid = styled(FadeIn)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCountryCard = styled(Link)`\r\n  color: black;\r\n  text-decoration: none;\r\n  div {\r\n    width: 300px;\r\n    height: 100%;\r\n    margin: 0 15px 40px;\r\n    box-shadow: 0px 0px 50px 0px rgba(219, 219, 219, 5);\r\n    margin-top: 10px;\r\n    border-radius: 15px;\r\n    padding: 5px 20px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      text-decoration-color: blue;\r\n      color: white;\r\n      background-color: #8c8c8c;\r\n    }\r\n    h1 {\r\n      text-align: center;\r\n      margin: 10px 0;\r\n      font-size: 21px;\r\n    }\r\n\r\n    p {\r\n      box-sizing: border-box;\r\n      width: 100%;\r\n      margin: 0;\r\n      position: relative;\r\n      span {\r\n        box-sizing: border-box;\r\n        width: 100px;\r\n        text-align: right;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n    div{\r\n      width: 200px;\r\n    }\r\n    h1{\r\n      font-size: 12px;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 8px;\r\n    div{\r\n      width: 150px;\r\n      padding:2px 2px;\r\n      margin: 0 7px 14px;\r\n      h1{\r\n        font-size: 12px;\r\n      }\r\n    }\r\n    h1{\r\n      font-size: 12px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledCountryCard } from './Countrycard.styled';\r\n\r\nconst CountryCard = ({\r\n  Country,\r\n  TotalConfirmed,\r\n  TotalDeath,\r\n  TotalRecovered,\r\n}) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    maximumSignificantDigits: 3,\r\n  });\r\n  return (\r\n    <StyledCountryCard to={`/${Country}`}>\r\n      <div>\r\n        <h1>{Country}</h1>\r\n        <p>\r\n          Total Confirmed:{' '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#b30000' }}>\r\n            {formatter.format(TotalConfirmed)}\r\n          </span>\r\n          <br></br>Total Death: {'    '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#333333' }}>\r\n            {formatter.format(TotalDeath)}\r\n          </span>\r\n          <br></br>Total Recovered:{' '}&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <span style={{ color: '#006600' }}>\r\n            {formatter.format(TotalRecovered)}\r\n          </span>{' '}\r\n        </p>\r\n        <br></br>\r\n      </div>\r\n    </StyledCountryCard>\r\n  );\r\n};\r\n\r\nexport default CountryCard;\r\n","import React from 'react';\r\nimport { FlexGrid } from '../Styled';\r\nimport CountryCard from './CountryCard';\r\n\r\nconst CountryGrid = ({ response, input }) => {\r\n  const { data } = response;\r\n  // console.log(data);\r\n  return (\r\n    <FlexGrid className=\"mt-2\">\r\n      {data.map(v => {\r\n        if (v.name.toLowerCase().search(input) === 0) {\r\n          return (\r\n            <div key={v.name}>\r\n              <CountryCard\r\n                key={v.name}\r\n                Country={v.name}\r\n                TotalConfirmed={v.latest_data.confirmed}\r\n                TotalDeath={v.latest_data.deaths}\r\n                TotalRecovered={v.latest_data.recovered}\r\n              />\r\n            </div>\r\n          );\r\n        } else return undefined;\r\n      })}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default CountryGrid;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 500px;\r\n  height: 18px;\r\n  margin: auto;\r\n  margin-bottom: 50px;\r\n  outline: none;\r\n  padding: 13px 15px;\r\n  border: 1px solid #dbdbdb;\r\n  box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n  font-size: 14px;\r\n  border-radius: 20px;\r\n  color: #8d8d8d;\r\n\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n    width: 350px;\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 10px;\r\n    width: 250px;\r\n  }\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    text-transform: uppercase;\r\n    margin: 0 0 10px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  /* margin-left: 380px; */\r\n  margin-bottom: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  span {\r\n    font-weight: bold;\r\n    margin-left: 20px;\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const HomeWrapper = styled.div`\r\n  margin: auto;\r\n  width: 1400px;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CountryGrid from '../Components/Country/CountryGrid';\r\nimport { Main, SearchInput, TitleWrapper, HomeWrapper } from './Home.styled';\r\n\r\nvar formatter = new Intl.NumberFormat('en-US', {\r\n  maximumSignificantDigits: 3,\r\n});\r\nconst renderResults = (response, response2, input) => {\r\n  // console.log('renderResults');\r\n  // console.log(response2);\r\n  if (response.data !== undefined && response2.ID !== undefined) {\r\n    // console.log('insiderenderResults');\r\n    return (\r\n      <div>\r\n        <Main>\r\n          <span\r\n            style={{\r\n              color: '#b30000',\r\n              background: '#ff9999',\r\n            }}\r\n          >\r\n            TotalConfirmed: {formatter.format(response2.Global.TotalConfirmed)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#006600',\r\n              background: '#99ff99',\r\n            }}\r\n          >\r\n            TotalDeath: {formatter.format(response2.Global.TotalDeaths)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#333333',\r\n              background: '#cccccc',\r\n            }}\r\n          >\r\n            TotalRecovered: {formatter.format(response2.Global.TotalRecovered)}\r\n          </span>\r\n        </Main>\r\n        <CountryGrid response={response} input={input} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Home = () => {\r\n  const [input, setInput] = useState('');\r\n\r\n  const [response, setResponse] = useState('');\r\n  const [response2, setResponse2] = useState('');\r\n  const onInputChange = ev => {\r\n    setInput(ev.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('https://corona-api.com/countries')\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(r => {\r\n        setResponse(r);\r\n        // console.log(r);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.covid19api.com/summary')\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(r => {\r\n        setResponse2(r);\r\n        console.log(r.Global.TotalConfirmed);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n  //console.log(input);\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      <TitleWrapper>\r\n        <h1>COVID-19 PANDEMIC TRACKER</h1>\r\n      </TitleWrapper>\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Type a Country\"\r\n        value={input}\r\n        // onKeyDown={onKeyDown}\r\n        onChange={onInputChange}\r\n      />\r\n      {/* <SearchButtonWrapper>\r\n        <button type=\"button\" onClick={onSearch}>\r\n          Search\r\n        </button>\r\n      </SearchButtonWrapper> */}\r\n      {renderResults(response, response2, input)}\r\n    </HomeWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCountryMain = styled.div`\r\n  color: #636362;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  h1 {\r\n    width: 620px;\r\n    color: black;\r\n    border-bottom: 1px solid #b0b0b0;\r\n  }\r\n  h5 {\r\n    color: gray;\r\n  }\r\n  div {\r\n    span {\r\n      width: 300px;\r\n      height: 50px;\r\n      margin: auto;\r\n      margin-left: 10px;\r\n      margin-top: 1px;\r\n      padding: 20px 20px;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n    h1 {\r\n      width: 430px;\r\n    }\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 10px;\r\n    h1 {\r\n      width: 300px;\r\n    }\r\n    div {\r\n      span {\r\n        padding: 5px 5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonStyle = styled.button`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  padding: 8px;\r\n  @media (max-width: 768px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","export var isoname={\r\n  \"China\": \"CHN\",\r\n  \"Thailand\": \"Tha\",\r\n  \"S. Korea\": \"KOR\",\r\n  \"Singapore\": \"SGP\",\r\n  \"Philippines\": \"PHL\",\r\n  \"Malaysia\": \"MYS\",\r\n  \"Vietnam\": \"VNM\",\r\n  \"Australia\": \"AUS\",\r\n  \"Mexico\": \"MEX\",\r\n  \"Brazil\": \"BRA\",\r\n  \"Colombia\": \"COL\",\r\n  \"France\": \"FRA\",\r\n  \"Nepal\": \"Nepal\",\r\n  \"Canada\": \"CAN\",\r\n  \"Cambodia\": \"KHM\",\r\n  \"Sri Lanka\": \"LKA\",\r\n  \"Cote d'Ivoire\": \"CIV\",\r\n  \"Germany\": \"DEU\",\r\n  \"Finland\": \"FIN\",\r\n  \"United Arab Emirates\": \"ARE\",\r\n  \"India\": \"IND\",\r\n  \"Italy\": \"ITA\",\r\n  \"United Kingdom\": \"GBR\",\r\n  \"Russia\": \"RUS\",\r\n  \"Sweden\": \"SWE\",\r\n  \"Spain\": \"ESP\",\r\n  \"Belgium\": \"BEL\",\r\n  \"Egypt\": \"EGY\",\r\n  \"Iran\": \"IRN\",\r\n  \"Israel\": \"ISR\",\r\n  \"Lebanon\": \"LBN\",\r\n  \"Iraq\": \"IRQ\",\r\n  \"Oman\": \"OMN\",\r\n  \"Afghanistan\": \"AFG\",\r\n  \"Bahrain\": \"BHR\",\r\n  \"Kuwait\": \"KWT\",\r\n  \"Austria\": \"AUT\",\r\n  \"USA\":\"usa\",\r\n  \"Algeria\": \"DZA\",\r\n  \"Croatia\": \"HRV\",\r\n  \"Switzerland\": \"CHE\",\r\n  \"Pakistan\": \"PAK\",\r\n  \"Georgia\": \"GEO\",\r\n  \"Greece\": \"GRC\",\r\n  \"North Macedonia\": \"MKD\",\r\n  \"Norway\": \"NOR\",\r\n  \"Romania\": \"ROU\",\r\n  \"Denmark\": \"DNK\",\r\n  \"Estonia\": \"EST\",\r\n  \"Netherlands\": \"NLD\",\r\n  \"San Marino\": \"SMR\",\r\n  \"Azerbaijan\": \"AZE\",\r\n  \"Belarus\": \"BLR\",\r\n  \"Iceland\": \"ISL\",\r\n  \"Lithuania\": \"LTU\",\r\n  \"New Zealand\": \"NZL\",\r\n  \"Nigeria\": \"NGA\",\r\n  \"Ireland\": \"IRL\",\r\n  \"Luxembourg\": \"LUX\",\r\n  \"Monaco\": \"MCO\",\r\n  \"Qatar\": \"QAT\",\r\n  \"Ecuador\": \"ECU\",\r\n  \"Czechia\": \"CZE\",\r\n  \"Armenia\": \"ARM\",\r\n  \"Dominican Republic\": \"DOM\",\r\n  \"Indonesia\": \"IDN\",\r\n  \"Portugal\": \"PRT\",\r\n  \"Andorra\": \"AND\",\r\n  \"Latvia\": \"LVA\",\r\n  \"Morocco\": \"MAR\",\r\n  \"Saudi Arabia\": \"SAU\",\r\n  \"Senegal\": \"SEN\",\r\n  \"Argentina\": \"ARG\",\r\n  \"Chile\": \"CHL\",\r\n  \"Jordan\": \"JOR\",\r\n  \"Ukraine\": \"UKR\",\r\n  \"Saint Barthelemy\": \"BLM\",\r\n  \"Hungary\": \"HUN\",\r\n  \"Faroe Islands\": \"FRO\",\r\n  \"Gibraltar\": \"GIB\",\r\n  \"Liechtenstein\": \"LIE\",\r\n  \"Poland\": \"POL\",\r\n  \"Tunisia\": \"TUN\",\r\n  \"West Bank and Gaza\": \"PSE\",\r\n  \"Bosnia and Herzegovina\": \"BIH\",\r\n  \"Slovenia\": \"SVN\",\r\n  \"South Africa\": \"ZAF\",\r\n  \"Bhutan\": \"BTN\",\r\n  \"Cameroon\": \"CMR\",\r\n  \"Costa Rica\": \"CRI\",\r\n  \"Peru\": \"PER\",\r\n  \"Serbia\": \"SRB\",\r\n  \"Slovakia\": \"SVK\",\r\n  \"Togo\": \"TGO\",\r\n  \"Holy See\": \"VAT\",\r\n  \"French Guiana\": \"GUF\",\r\n  \"Malta\": \"MLT\",\r\n  \"Martinique\": \"MTQ\",\r\n  \"Bulgaria\": \"BGR\",\r\n  \"Maldives\": \"MDV\",\r\n  \"Bangladesh\": \"BGD\",\r\n  \"Moldova\": \"MDA\",\r\n  \"Paraguay\": \"PRY\",\r\n  \"Albania\": \"ALB\",\r\n  \"Cyprus\": \"CYP\",\r\n  \"Brunei\": \"BRN\",\r\n  \"Macao SAR\": \"MAC\",\r\n  \"Saint Martin\": \"MAF\",\r\n  \"Burkina Faso\": \"BFA\",\r\n  \"Channel Islands\": \"GGY-JEY\",\r\n  \"Mongolia\": \"MNG\",\r\n  \"Panama\": \"PAN\",\r\n  \"Cruise Ship\": \"cruise\",\r\n  \"Taiwan*\": \"TWN\",\r\n  \"Bolivia\": \"BOL\",\r\n  \"Honduras\": \"HND\",\r\n  \"Congo (Kinshasa)\": \"COD\",\r\n  \"Jamaica\": \"JAM\",\r\n  \"Reunion\": \"REU\",\r\n  \"Turkey\": \"TUR\",\r\n  \"Cuba\": \"CUB\",\r\n  \"Guyana\": \"GUY\",\r\n  \"Kazakhstan\": \"KAZ\",\r\n  \"Cayman Islands\": \"CYM\",\r\n  \"Guadeloupe\": \"GLP\",\r\n  \"Ethiopia\": \"ETH\",\r\n  \"Sudan\": \"SDN\",\r\n  \"Guinea\": \"GIN\",\r\n  \"Antigua and Barbuda\": \"ATG\",\r\n  \"Aruba\": \"ABW\",\r\n  \"Kenya\": \"KEN\",\r\n  \"Uruguay\": \"URY\",\r\n  \"Ghana\": \"GHA\",\r\n  \"Jersey\": \"JEY\",\r\n  \"Namibia\": \"NAM\",\r\n  \"Seychelles\": \"SYC\",\r\n  \"Trinidad and Tobago\": \"TTO\",\r\n  \"Venezuela\": \"VEN\",\r\n  \"Curacao\": \"CUW\",\r\n  \"Eswatini\": \"SWZ\",\r\n  \"Gabon\": \"GAB\",\r\n  \"Guatemala\": \"GTM\",\r\n  \"Guernsey\": \"GGY\",\r\n  \"Mauritania\": \"MRT\",\r\n  \"Rwanda\": \"RWA\",\r\n  \"Saint Lucia\": \"LCA\",\r\n  \"Saint Vincent and the Grenadines\": \"VCT\",\r\n  \"Suriname\": \"SUR\",\r\n  \"Kosovo\": \"RKS\",\r\n  \"Central African Republic\": \"CAF\",\r\n  \"Congo (Brazzaville)\": \"COG\",\r\n  \"Equatorial Guinea\": \"GNQ\",\r\n  \"Uzbekistan\": \"UZB\",\r\n  \"Guam\": \"GUM\",\r\n  \"Puerto Rico\": \"PRI\",\r\n  \"Benin\": \"BEN\",\r\n  \"Greenland\": \"GRL\",\r\n  \"Liberia\": \"LBR\",\r\n  \"Mayotte\": \"MYT\",\r\n  \"Somalia\": \"SOM\",\r\n  \"Tanzania\": \"TZA\",\r\n  \"Bahamas\": \"BHS\",\r\n  \"Barbados\": \"BRB\",\r\n  \"Montenegro\": \"MNE\",\r\n  \"Gambia\": \"GMB\",\r\n  \"Kyrgyzstan\": \"KGZ\",\r\n  \"Mauritius\": \"MUS\",\r\n  \"Zambia\": \"ZMB\",\r\n  \"Djibouti\": \"DJI\",\r\n  \"Chad\": \"TCD\",\r\n  \"El Salvador\": \"SLV\",\r\n  \"Fiji\": \"FJI\",\r\n  \"Nicaragua\": \"NIC\",\r\n  \"Madagascar\": \"MDG\",\r\n  \"Haiti\": \"HTI\",\r\n  \"Angola\": \"AGO\",\r\n  \"Cabo Verde\": \"CPV\",\r\n  \"Niger\": \"NER\",\r\n  \"Papua New Guinea\": \"PNG\",\r\n  \"Zimbabwe\": \"ZWE\",\r\n  \"Timor-Leste\": \"TLS\",\r\n  \"Eritrea\": \"ERI\",\r\n  \"Uganda\": \"UGA\",\r\n  \"Dominica\": \"DMA\",\r\n  \"Grenada\": \"GRD\",\r\n  \"Mozambique\": \"MOZ\",\r\n  \"Syria\": \"SYR\",\r\n  \"Belize\": \"BLZ\",\r\n  \"Laos\": \"LAO\",\r\n  \"Libya\": \"LBY\",\r\n  \"Diamond Princess\": \"NA-SHIP-DP\",\r\n  \"Guinea-Bissau\": \"GNB\",\r\n  \"Mali\": \"MLI\",\r\n  \"Saint Kitts and Nevis\": \"KNA\",\r\n  \"Botswana\": \"BWA\",\r\n  \"Burundi\": \"BDI\",\r\n  \"Sierra Leone\": \"SLE\",\r\n  \"Burma\": \"MMR\",\r\n  \"Malawi\": \"MWI\",\r\n  \"South Sudan\": \"SSD\",\r\n  \"Western Sahara\": \"ESH\",\r\n  \"Sao Tome and Principe\": \"STP\",\r\n  \"MS Zaandam\": \"NA-SHIP-MSZ\",\r\n  \"Yemen\": \"YEM\",\r\n  \"Comoros\": \"COM\",\r\n  \"Tajikistan\": \"TJK\",\r\n  \"Lesotho\": \"LSO\",\r\n  \"Solomon Islands\": \"SLB\",\r\n  \"Marshall Islands\": \"MHL\",\r\n  \"Vanuatu\": \"VUT\",\r\n  \"Samoa\": \"WSM\",\r\n  \"Kiribati\": \"KIR\",\r\n  \"Palau\": \"PLW\"\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  CartesianGrid,\r\n  // ResponsiveContainer,\r\n} from 'recharts';\r\n\r\nconst Barchart = ({ data, render }) => {\r\n  console.log(render);\r\n  var color;\r\n  if (render === 1) {\r\n    color = '#ff3049';\r\n  } else if (render === 2) {\r\n    color = 'green';\r\n  } else if (render === 3) {\r\n    color = 'grey';\r\n  }\r\n  return (\r\n    <div>\r\n      {/* <ResponsiveContainer width=\"40%\" height={300}> */}\r\n        <BarChart\r\n          width={400}\r\n          height={300}\r\n          data={data ? data : []}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Bar dataKey=\"val\" fill={color} />\r\n        </BarChart>\r\n      {/* </ResponsiveContainer> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barchart;\r\n","/* eslint-disable no-loop-func */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ButtonStyle } from './barchartmaim.styled';\r\nimport { isoname } from '../data/iso';\r\nimport Barchart from './Barchart';\r\n\r\nconsole.log(1);\r\nvar data = [\r\n  {\r\n    date: '1',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '2',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '3',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '4',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '5',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '6',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '7',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '8',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n  {\r\n    date: '9',\r\n    val: 0,\r\n  },\r\n];\r\n// console.log(2);\r\n\r\n// console.log(3);\r\n\r\nconst Barchartmain = ({ Country }) => {\r\n  console.log(4);\r\n  const [render, setRender] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  console.log(Country);\r\n  console.log(isoname[`${Country}`]);\r\n  const iso = isoname[`${Country}`];\r\n\r\n  console.log(5);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    var count = 0;\r\n    var date = new Date();\r\n    for (let i = 1; i <= 14; i++) {\r\n      var days = 15 - i;\r\n      var last = new Date(date.getTime() - days * 24 * 60 * 60 * 1000);\r\n      data[i - 1].date = String(last).substring(4, 10);\r\n      var day = last.getDate();\r\n      var month = last.getMonth() + 1;\r\n      var year = last.getFullYear();\r\n      day = ('0' + day).slice(-2);\r\n      month = ('0' + month).slice(-2);\r\n      console.log('7' + i);\r\n      console.log(day + ' ' + month + ' ' + year + ' ' + last);\r\n      fetch(\r\n        `https://covid-api.com/api/reports/total?date=${year}-${month}-${day}&iso=${iso}`\r\n      )\r\n        .then(r => {\r\n          console.log('8' + i);\r\n          return r.json();\r\n        })\r\n        .then(b => {\r\n          console.log('9' + i);\r\n\r\n          if (render === 1) {\r\n            count++;\r\n            data[i - 1].val = b.data.confirmed_diff;\r\n            console.log(b.data.confirmed_diff + ' ' + i);\r\n            if (count === 14) setLoading(false);\r\n          } else if (render === 2) {\r\n            count++;\r\n            data[i - 1].val = b.data.recovered_diff;\r\n            console.log(b.data.recovered_diff + ' ' + i);\r\n            if (count === 14) setLoading(false);\r\n          } else if (render === 3) {\r\n            count++;\r\n            data[i - 1].val = b.data.deaths_diff;\r\n            console.log(b.data.deaths_diff + ' ' + i);\r\n            if (count === 14) setLoading(false);\r\n          }\r\n        });\r\n    }\r\n  }, [iso, render]);\r\n\r\n  useEffect(() => {\r\n    console.log('render ' + render);\r\n    console.log('loading ' + loading);\r\n  }, [render, loading]);\r\n  useEffect(() => {\r\n    console.log('loading ' + loading);\r\n  }, [loading]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection:'column',\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      {console.log(10)}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-evenly',\r\n          alignContent: 'center',\r\n        }}\r\n      >\r\n        {console.log(11)}\r\n        <ButtonStyle\r\n          style={{ color: 'red' }}\r\n          onClick={() => {\r\n            setRender(1);\r\n            console.log('confirmed clicked');\r\n            setLoading(true);\r\n          }}\r\n          type=\"button\"\r\n        >\r\n          Confirmed\r\n        </ButtonStyle>\r\n        <ButtonStyle\r\n          style={{ color: 'green' }}\r\n          onClick={() => {\r\n            setRender(2);\r\n            console.log('recovered clicked');\r\n            setLoading(true);\r\n          }}\r\n          type=\"button\"\r\n        >\r\n          Recovered\r\n        </ButtonStyle>\r\n        <ButtonStyle\r\n          style={{ color: 'grey' }}\r\n          onClick={() => {\r\n            setRender(3);\r\n            console.log('death button clicked');\r\n            setLoading(true);\r\n          }}\r\n          type=\"button\"\r\n        >\r\n          Death\r\n        </ButtonStyle>\r\n      </div>\r\n      {console.log(12)}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n          marginTop: '30px',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {console.log(13)}\r\n        {loading && <div>loading</div>}\r\n        {render === 1 && loading === false && (\r\n          <Barchart data={data} render={render} />\r\n        )}\r\n        {render === 2 && loading === false && (\r\n          <Barchart data={data} render={render} />\r\n        )}\r\n        {render === 3 && loading === false && (\r\n          <Barchart data={data} render={render} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Barchartmain;\r\n","import React from 'react';\r\nimport { StyledCountryMain } from './countrymain.styled';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport ProgressBar from 'react-customizable-progressbar';\r\nimport Barchartmain from '../barchart/Barchartmain';\r\n\r\nfunction numFormatter(num) {\r\n  if (num > 999 && num < 1000000) {\r\n    return (num / 1000).toFixed(1) + 'K'; // convert to K for number from > 1000 < 1 million\r\n  } else if (num > 1000000) {\r\n    return (num / 1000000).toFixed(1) + 'M'; // convert to M for number from > 1 million\r\n  } else if (num < 900) {\r\n    return num; // if value < 1000, nothing to do\r\n  }\r\n}\r\n\r\nconst CountryMain = ({\r\n  Country,\r\n  confirmed,\r\n  death,\r\n  recovered,\r\n  td,\r\n  tc,\r\n  updatedAt,\r\n  population,\r\n  critical,\r\n  deathrate,\r\n  recoveryrate,\r\n  casespermillion,\r\n}) => {\r\n  //   console.log(Country + ' ' + match);\r\n\r\n  var da = new Date(updatedAt);\r\n  console.log(da);\r\n  updatedAt = String(da).substring(4, 15);\r\n  var county = Country;\r\n  Country = Country.toUpperCase();\r\n  deathrate = deathrate ? deathrate.toFixed(2) : 0;\r\n  recoveryrate = recoveryrate ? recoveryrate.toFixed(2) : 0;\r\n\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    maximumSignificantDigits: 3,\r\n  });\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection:'column',\r\n      alignContent: 'center',\r\n      justifyContent: 'center',\r\n    }}>\r\n      <StyledCountryMain>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            alignContent: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <h1>\r\n            {Country}\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignContent: 'center',\r\n                justifyContent: 'center',\r\n                fontSize: '15px',\r\n              }}\r\n            >\r\n              <h5>Updated: {updatedAt}</h5>\r\n              <h5 style={{ paddingLeft: '30px' }}>\r\n                Population: {numFormatter(population)}\r\n              </h5>\r\n            </div>\r\n          </h1>\r\n        </div>\r\n\r\n        <div style={{ height: '75px', paddingTop: '20px' }}>\r\n          <span\r\n            style={{\r\n              color: '#b30000',\r\n              background: '#ff9999',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Cases: {formatter.format(confirmed)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#006600',\r\n              background: '#99ff99',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Recovered: {formatter.format(recovered)}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: '#333333',\r\n              background: '#cccccc',\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Total Death: {formatter.format(death)}\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"d-flex justify-content-between align-item-center\"\r\n          style={{ color: 'gray', borderColor: 'green' }}\r\n        >\r\n          <span style={{ borderRight: '1px solid #b0b0b0' }}>\r\n            Cases today: {formatter.format(tc)}\r\n          </span>\r\n          <span style={{ borderRight: '1px solid #b0b0b0' }}>\r\n            Deaths today: {formatter.format(td)}\r\n          </span>\r\n          <span style={{ borderRight: '1px solid #b0b0b0' }}>\r\n            Critical: {formatter.format(critical)}\r\n          </span>\r\n          <span>Cases per Million: {formatter.format(casespermillion)}</span>\r\n        </div>\r\n      </StyledCountryMain>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          marginTop: '40px',\r\n          fontSize: '15px',\r\n          marginBottom: '60px',\r\n        }}\r\n      >\r\n        <ProgressBar\r\n          radius={70}\r\n          progress={deathrate}\r\n          strokeWidth={4}\r\n          strokeColor=\"#b30000\"\r\n          strokeLinecap=\"square\"\r\n          trackStrokeWidth={10}\r\n        >\r\n          <div\r\n            className=\"indicator\"\r\n            style={{\r\n              display: 'flex',\r\n              height: '100%',\r\n              justifyContent: 'center',\r\n              margin: 'auto',\r\n              position: 'absolute',\r\n              textAlign: 'center',\r\n              top: '0',\r\n              width: '100%',\r\n              paddingTop: '70px',\r\n            }}\r\n          >\r\n            <div>\r\n              Death Rate:<br></br>\r\n              {deathrate !== 0 && <div>{deathrate}%</div>}\r\n              {deathrate === 0 && <div>NA</div>}\r\n            </div>\r\n          </div>\r\n        </ProgressBar>\r\n\r\n        <ProgressBar\r\n          radius={70}\r\n          progress={recoveryrate}\r\n          strokeWidth={4}\r\n          strokeColor=\"#006600\"\r\n          strokeLinecap=\"square\"\r\n          trackStrokeWidth={10}\r\n        >\r\n          <div\r\n            className=\"indicator\"\r\n            style={{\r\n              display: 'flex',\r\n              height: '100%',\r\n              justifyContent: 'center',\r\n              margin: 'auto',\r\n              position: 'absolute',\r\n              textAlign: 'center',\r\n              top: '0',\r\n              width: '100%',\r\n              paddingTop: '70px',\r\n            }}\r\n          >\r\n            <div>\r\n              Recovery Rate:<br></br>\r\n              {recoveryrate !== 0 && <div>{recoveryrate}%</div>}\r\n              {recoveryrate === 0 && <div>NA</div>}\r\n            </div>\r\n          </div>\r\n        </ProgressBar>\r\n      </div>\r\n      <Barchartmain Country={county} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryMain;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport CountryMain from '../Components/Country/CountryMain';\r\n\r\nconst renderResults = (data, country) => {\r\n  // console.log('renderResults');\r\n  // console.log(data);\r\n  if (data !== '') {\r\n    // console.log('insiderenderResults');\r\n    return data.map(v => {\r\n      // console.log(v.name);\r\n      // console.log(country);\r\n      if (v.name === country.country) {\r\n        return (\r\n          <div key={v.name}>\r\n            <CountryMain\r\n              Country={v.name}\r\n              match={country}\r\n              confirmed={v.latest_data.confirmed}\r\n              death={v.latest_data.deaths}\r\n              recovered={v.latest_data.recovered}\r\n              td={v.today.deaths}\r\n              tc={v.today.confirmed}\r\n              updatedAt={v.updated_at}\r\n              population={v.population}\r\n              critical={v.latest_data.critical}\r\n              deathrate={v.latest_data.calculated.death_rate}\r\n              recoveryrate={v.latest_data.calculated.recovery_rate}\r\n              casespermillion={v.latest_data.calculated.cases_per_million_population}\r\n            />\r\n          </div>\r\n        );\r\n      } else {\r\n        return undefined;\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst Country = () => {\r\n  const [data, setData] = useState('');\r\n  \r\n  // const onshow = () => {\r\n  //   // fetch('https://api.covid19api.com/summary')\r\n  //   fetch('https://corona-api.com/countries')\r\n  //     .then(resp => {\r\n  //       return resp.json();\r\n  //     })\r\n  //     .then(r => {\r\n  //       setData(r.data);\r\n  //       console.log(r.data);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.error(err);\r\n  //     });\r\n  // };\r\n  useEffect(() => {\r\n    fetch('https://corona-api.com/countries')\r\n      .then(resp => {\r\n        return resp.json();\r\n      })\r\n      .then(r => {\r\n        setData(r.data);\r\n        // console.log(r.data);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    return () => {};\r\n  }, []);\r\n\r\n  const country = useParams();\r\n  //   console.log(data[0].Country);\r\n  //   console.log(country);\r\n  return (\r\n    <div>\r\n      {/* <button onClick={onshow}>show</button> */}\r\n      {renderResults(data, country)}\r\n      {/* {\r\n      data &&\r\n        data.map(v => {\r\n          if (v.Country === country) {\r\n            return (\r\n              <div>\r\n                {v.Country}\r\n                {v.TotalRecovered}\r\n              </div>\r\n            );\r\n          } else {\r\n            return undefined;\r\n          }\r\n        })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","\nimport { Switch, Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Home from './pages/Home';\nimport Country from './pages/Country';\n\nconst theme = {\n  mainColors: {\n    blue: '#2400ff',\n    gray: '#c6c6c6',\n    dark: '#353535',\n  },\n};\nfunction App() {\n  return (\n    <ThemeProvider theme={theme }>\n\n    <Switch>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route exact path=\"/:country\">\n        <Country/>\n      </Route>\n      <Route>This is 404 page</Route>\n    </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}